/* SPDX-License-Identifier: GPL-2.0-only */
/*
 * Copyright (c) 2014-2021, The Linux Foundation. All rights reserved.
 */

#ifndef EDP_V510_REG
#define EDP_V510_REG

enum edp_color_depth {
	EDP_6BIT = 0,
	EDP_8BIT = 1,
	EDP_10BIT = 2,
	EDP_12BIT = 3,
	EDP_16BIT = 4,
};

enum edp_component_format {
	EDP_RGB = 0,
	EDP_YUV422 = 1,
	EDP_YUV444 = 2,
};

/* DP_TX Registers */
#define REG_EDP_HW_VERSION			(0x00000000)

#define REG_EDP_SW_RESET			(0x00000010)
#define DP_SW_RESET				(0x00000001)

#define REG_EDP_PHY_CTRL			(0x00000014)
#define EDP_PHY_CTRL_SW_RESET_PLL		(0x00000001)
#define EDP_PHY_CTRL_SW_RESET			(0x00000004)

#define REG_EDP_CLK_CTRL			(0x00000018)
#define REG_EDP_CLK_ACTIVE			(0x0000001C)

#define REG_EDP_INTR_STATUS			(0x00000020)
#define EDP_INTR_AUX_I2C_DONE			BIT(3)
#define EDP_INTR_WRONG_ADDR			BIT(6)
#define EDP_INTR_TIMEOUT			BIT(9)
#define EDP_INTR_NACK_DEFER			BIT(12)
#define EDP_INTR_WRONG_DATA_CNT			BIT(15)
#define EDP_INTR_I2C_NACK			BIT(18)
#define EDP_INTR_I2C_DEFER			BIT(21)
#define EDP_INTR_PLL_UNLOCKED			BIT(24)
#define EDP_INTR_AUX_ERROR			BIT(27)

#define REG_EDP_INTR_STATUS2			(0x00000024)
#define EDP_INTR_READY_FOR_VIDEO		BIT(0)
#define EDP_INTR_IDLE_PATTERN_SENT		BIT(3)
#define EDP_INTR_FRAME_END			BIT(6)
#define EDP_INTR_CRC_UPDATED			BIT(9)
#define EDP_INTR_SST_FIFO_UNDERFLOW		BIT(28)


#define REG_EDP_DP_HPD_CTRL			(0x00000000)
#define EDP_DP_HPD_CTRL_HPD_EN			(0x00000001)

#define REG_EDP_DP_HPD_INT_STATUS		(0x00000004)

#define REG_EDP_DP_HPD_INT_ACK			(0x00000008)
#define EDP_DP_HPD_PLUG_INT_ACK			(0x00000001)
#define EDP_DP_IRQ_HPD_INT_ACK			(0x00000002)
#define EDP_DP_HPD_REPLUG_INT_ACK		(0x00000004)
#define EDP_DP_HPD_UNPLUG_INT_ACK		(0x00000008)
#define EDP_DP_HPD_STATE_STATUS_BITS_MASK	(0x0000000F)
#define EDP_DP_HPD_STATE_STATUS_BITS_SHIFT	(0x1C)

#define REG_EDP_DP_HPD_INT_MASK			(0x0000000C)
#define EDP_DP_HPD_PLUG_INT_MASK		(0x00000001)
#define EDP_DP_IRQ_HPD_INT_MASK			(0x00000002)
#define EDP_DP_HPD_REPLUG_INT_MASK		(0x00000004)
#define EDP_DP_HPD_UNPLUG_INT_MASK		(0x00000008)
#define EDP_DP_HPD_INT_MASK			(EDP_DP_HPD_PLUG_INT_MASK | \
						EDP_DP_IRQ_HPD_INT_MASK | \
						EDP_DP_HPD_REPLUG_INT_MASK | \
						EDP_DP_HPD_UNPLUG_INT_MASK)
#define EDP_DP_HPD_STATE_STATUS_CONNECTED	(0x40000000)
#define EDP_DP_HPD_STATE_STATUS_PENDING		(0x20000000)
#define EDP_DP_HPD_STATE_STATUS_DISCONNECTED	(0x00000000)
#define EDP_DP_HPD_STATE_STATUS_MASK		(0xE0000000)

#define REG_EDP_DP_HPD_REFTIMER			(0x00000018)
#define EDP_DP_HPD_REFTIMER_ENABLE		(1 << 16)

#define REG_EDP_DP_HPD_EVENT_TIME_0		(0x0000001C)
#define REG_EDP_DP_HPD_EVENT_TIME_1		(0x00000020)
#define EDP_DP_HPD_EVENT_TIME_0_VAL		(0x3E800FA)
#define EDP_DP_HPD_EVENT_TIME_1_VAL		(0x1F407D0)

#define REG_EDP_AUX_CTRL			(0x00000030)
#define EDP_AUX_CTRL_ENABLE			(0x00000001)
#define EDP_AUX_CTRL_RESET			(0x00000002)

#define REG_EDP_AUX_DATA			(0x00000034)
#define EDP_AUX_DATA_READ			(0x00000001)
#define EDP_AUX_DATA_DATA__MASK			(0x0000ff00)
#define EDP_AUX_DATA_DATA__SHIFT		(8)
static inline uint32_t EDP_AUX_DATA_DATA(uint32_t val)
{
	return ((val) << EDP_AUX_DATA_DATA__SHIFT) & EDP_AUX_DATA_DATA__MASK;
}
#define EDP_AUX_DATA_INDEX__MASK		(0x00ff0000)
#define EDP_AUX_DATA_INDEX__SHIFT		(16)
static inline uint32_t EDP_AUX_DATA_INDEX(uint32_t val)
{
	return ((val) << EDP_AUX_DATA_INDEX__SHIFT) & EDP_AUX_DATA_INDEX__MASK;
}
#define EDP_AUX_DATA_INDEX_WRITE		(0x80000000)

#define REG_EDP_AUX_TRANS_CTRL			(0x00000038)
#define EDP_AUX_TRANS_CTRL_I2C			(0x00000100)
#define EDP_AUX_TRANS_CTRL_GO			(0x00000200)
#define EDP_AUX_TRANS_CTRL_NO_SEND_ADDR		(0x00000400)
#define EDP_AUX_TRANS_CTRL_NO_SEND_STOP		(0x00000800)

#define REG_EDP_TIMEOUT_COUNT			(0x0000003C)
#define REG_EDP_AUX_LIMITS			(0x00000040)
#define REG_EDP_AUX_STATUS			(0x00000044)

#define EDP_INTERRUPT_TRANS_NUM			(0x000000A0)

#define REG_EDP_MAINLINK_CTRL			(0x00000000)
#define EDP_MAINLINK_CTRL_ENABLE		(0x00000001)
#define EDP_MAINLINK_CTRL_RESET			(0x00000002)
#define EDP_MAINLINK_CTRL_SW_BYPASS_SCRAMBLER	(0x00000010)
#define EDP_MAINLINK_FB_BOUNDARY_SEL		(0x02000000)

#define REG_EDP_STATE_CTRL			(0x00000004)
#define EDP_STATE_CTRL_LINK_TRAINING_PATTERN1	(0x00000001)
#define EDP_STATE_CTRL_LINK_TRAINING_PATTERN2	(0x00000002)
#define EDP_STATE_CTRL_LINK_TRAINING_PATTERN3	(0x00000004)
#define EDP_STATE_CTRL_LINK_TRAINING_PATTERN4	(0x00000008)
#define EDP_STATE_CTRL_LINK_SYMBOL_ERR_MEASURE	(0x00000010)
#define EDP_STATE_CTRL_LINK_PRBS7		(0x00000020)
#define EDP_STATE_CTRL_LINK_TEST_CUSTOM_PATTERN	(0x00000040)
#define EDP_STATE_CTRL_SEND_VIDEO		(0x00000080)
#define EDP_STATE_CTRL_PUSH_IDLE		(0x00000100)

#define REG_EDP_CONFIGURATION_CTRL			(0x00000008)
#define EDP_CONFIGURATION_CTRL_SYNC_ASYNC_CLK		(0x00000001)
#define EDP_CONFIGURATION_CTRL_STATIC_DYNAMIC_CN	(0x00000002)
#define EDP_CONFIGURATION_CTRL_P_INTERLACED		(0x00000004)
#define EDP_CONFIGURATION_CTRL_INTERLACED_BTF		(0x00000008)
#define EDP_CONFIGURATION_CTRL_NUM_OF_LANES		(0x00000010)
#define EDP_CONFIGURATION_CTRL_ENHANCED_FRAMING		(0x00000040)
#define EDP_CONFIGURATION_CTRL_SEND_VSC			(0x00000080)
#define EDP_CONFIGURATION_CTRL_BPC			(0x00000100)
#define EDP_CONFIGURATION_CTRL_ASSR			(0x00000400)
#define EDP_CONFIGURATION_CTRL_RGB_YUV			(0x00000800)
#define EDP_CONFIGURATION_CTRL_LSCLK_DIV		(0x00002000)
#define EDP_CONFIGURATION_CTRL_NUM_OF_LANES_SHIFT	(0x04)
#define EDP_CONFIGURATION_CTRL_BPC_SHIFT		(0x08)
#define EDP_CONFIGURATION_CTRL_LSCLK_DIV_SHIFT		(0x0D)

#define REG_EDP_SOFTWARE_MVID			(0x00000010)
#define REG_EDP_SOFTWARE_NVID			(0x00000018)

#define REG_EDP_TOTAL_HOR_VER			(0x0000001C)
#define EDP_TOTAL_HOR_VER_HORIZ__MASK		(0x0000FFFF)
#define EDP_TOTAL_HOR_VER_HORIZ__SHIFT		(0)
static inline uint32_t EDP_TOTAL_HOR_VER_HORIZ(uint32_t val)
{
	return ((val) << EDP_TOTAL_HOR_VER_HORIZ__SHIFT) & EDP_TOTAL_HOR_VER_HORIZ__MASK;
}
#define EDP_TOTAL_HOR_VER_VERT__MASK		(0xffff0000)
#define EDP_TOTAL_HOR_VER_VERT__SHIFT		(16)
static inline uint32_t EDP_TOTAL_HOR_VER_VERT(uint32_t val)
{
	return ((val) << EDP_TOTAL_HOR_VER_VERT__SHIFT) & EDP_TOTAL_HOR_VER_VERT__MASK;
}

#define REG_EDP_START_HOR_VER_FROM_SYNC			(0x00000020)
#define EDP_START_HOR_VER_FROM_SYNC_HORIZ__MASK		(0x0000ffff)
#define EDP_START_HOR_VER_FROM_SYNC_HORIZ__SHIFT	(0)
static inline uint32_t EDP_START_HOR_VER_FROM_SYNC_HORIZ(uint32_t val)
{
	return ((val) << EDP_START_HOR_VER_FROM_SYNC_HORIZ__SHIFT) &
		EDP_START_HOR_VER_FROM_SYNC_HORIZ__MASK;
}
#define EDP_START_HOR_VER_FROM_SYNC_VERT__MASK		(0xffff0000)
#define EDP_START_HOR_VER_FROM_SYNC_VERT__SHIFT		(16)
static inline uint32_t EDP_START_HOR_VER_FROM_SYNC_VERT(uint32_t val)
{
	return ((val) << EDP_START_HOR_VER_FROM_SYNC_VERT__SHIFT) &
		EDP_START_HOR_VER_FROM_SYNC_VERT__MASK;
}

#define REG_EDP_HSYNC_VSYNC_WIDTH_POLARITY		(0x00000024)
#define EDP_HSYNC_VSYNC_WIDTH_POLARITY_HORIZ__MASK	(0x00007fff)
#define EDP_HSYNC_VSYNC_WIDTH_POLARITY_HORIZ__SHIFT	(0)
static inline uint32_t EDP_HSYNC_VSYNC_WIDTH_POLARITY_HORIZ(uint32_t val)
{
	return ((val) << EDP_HSYNC_VSYNC_WIDTH_POLARITY_HORIZ__SHIFT) &
		EDP_HSYNC_VSYNC_WIDTH_POLARITY_HORIZ__MASK;
}
#define EDP_HSYNC_VSYNC_WIDTH_POLARITY_NHSYNC		(0x00008000)
#define EDP_HSYNC_VSYNC_WIDTH_POLARITY_VERT__MASK	(0x7fff0000)
#define EDP_HSYNC_VSYNC_WIDTH_POLARITY_VERT__SHIFT	(16)
static inline uint32_t EDP_HSYNC_VSYNC_WIDTH_POLARITY_VERT(uint32_t val)
{
	return ((val) << EDP_HSYNC_VSYNC_WIDTH_POLARITY_VERT__SHIFT) &
		EDP_HSYNC_VSYNC_WIDTH_POLARITY_VERT__MASK;
}
#define EDP_HSYNC_VSYNC_WIDTH_POLARITY_NVSYNC		(0x80000000)

#define REG_EDP_ACTIVE_HOR_VER				(0x00000028)
#define EDP_ACTIVE_HOR_VER_HORIZ__MASK			(0x0000ffff)
#define EDP_ACTIVE_HOR_VER_HORIZ__SHIFT			(0)
static inline uint32_t EDP_ACTIVE_HOR_VER_HORIZ(uint32_t val)
{
	return ((val) << EDP_ACTIVE_HOR_VER_HORIZ__SHIFT) & EDP_ACTIVE_HOR_VER_HORIZ__MASK;
}
#define EDP_ACTIVE_HOR_VER_VERT__MASK			(0xffff0000)
#define EDP_ACTIVE_HOR_VER_VERT__SHIFT			(16)
static inline uint32_t EDP_ACTIVE_HOR_VER_VERT(uint32_t val)
{
	return ((val) << EDP_ACTIVE_HOR_VER_VERT__SHIFT) & EDP_ACTIVE_HOR_VER_VERT__MASK;
}


#define REG_EDP_MISC1_MISC0				(0x0000002C)
#define EDP_MISC0_SYNCHRONOUS_CLK			(0x00000001)
#define EDP_MISC0_COLORIMETRY_CFG_SHIFT			(0x00000001)
#define EDP_MISC0_TEST_BITS_DEPTH_SHIFT			(0x00000005)

#define REG_EDP_VALID_BOUNDARY				(0x00000030)
#define REG_EDP_VALID_BOUNDARY_2			(0x00000034)

#define REG_EDP_LOGICAL2PHYSICAL_LANE_MAPPING		(0x00000038)
#define LANE0_MAPPING_SHIFT				(0x00000000)
#define LANE1_MAPPING_SHIFT				(0x00000002)
#define LANE2_MAPPING_SHIFT				(0x00000004)
#define LANE3_MAPPING_SHIFT				(0x00000006)

#define REG_EDP_MAINLINK_READY				(0x00000040)
#define EDP_MAINLINK_READY_FOR_VIDEO			(0x00000001)
#define EDP_MAINLINK_READY_TRAIN_PATTERN_1_READY	(0x00000008)

#define REG_EDP_MAINLINK_LEVELS				(0x00000044)
#define EDP_MAINLINK_SAFE_TO_EXIT_LEVEL_2		(0x00000002)

#define REG_EDP_TU					(0x0000004C)

/* PCLK registers */
#define REG_EDP_DSC_DTO					(0x0000007C)

/* PHY registers */
#define EDP_PHY_CFG					(0x00000010)
#define EDP_PHY_CFG_1					(0x00000014)
#define EDP_PHY_PD_CTL					(0x0000001C)
#define EDP_PHY_MODE					(0x00000020)
#define EDP_PHY_AUX_CFG0				(0x00000024)
#define EDP_PHY_AUX_CFG1				(0x00000028)
#define EDP_PHY_AUX_CFG2				(0x0000002C)
#define EDP_PHY_AUX_CFG3				(0x00000030)
#define EDP_PHY_AUX_CFG4				(0x00000034)
#define EDP_PHY_AUX_CFG5				(0x00000038)
#define EDP_PHY_AUX_CFG6				(0x0000003C)
#define EDP_PHY_AUX_CFG7				(0x00000040)
#define EDP_PHY_AUX_CFG8				(0x00000044)
#define EDP_PHY_AUX_CFG9				(0x00000048)
#define EDP_PHY_AUX_INTERRUPT_MASK			(0x00000058)
#define EDP_PHY_VCO_DIV					(0x00000074)
#define EDP_PHY_TX0_TX1_LANE_CTL			(0x0000007C)
#define EDP_PHY_TX2_TX3_LANE_CTL			(0x000000A0)
#define EDP_PHY_SPARE0					(0x000000CC)
#define EDP_PHY_STATUS					(0x000000E0)


/* Tx registers */
#define TXn_CLKBUF_ENABLE				(0x00000000)
#define TXn_TX_EMP_POST1_LVL				(0x00000004)
#define TXn_TX_DRV_LVL					(0x00000014)
#define TXn_TX_DRV_LVL_OFFSET				(0x00000018)
#define TXn_RESET_TSYNC_EN				(0x0000001C)
#define TXn_TX_BAND					(0x00000028)
#define TXn_RES_CODE_LANE_OFFSET_TX0			(0x00000044)
#define TXn_RES_CODE_LANE_OFFSET_TX1			(0x00000048)
#define TXn_TRANSCEIVER_BIAS_EN				(0x00000054)
#define TXn_HIGHZ_DRVR_EN				(0x00000058)
#define TXn_TX_POL_INV					(0x0000005C)
#define TXn_LANE_MODE_1					(0x00000064)
#define TXn_TRAN_DRVR_EMP_EN				(0x00000078)
#define TXn_LDO_CONFIG					(0x00000084)


/* PLL registers */
#define QSERDES_COM_BG_TIMER				(0x0000000C)
#define QSERDES_COM_SSC_EN_CENTER			(0x00000010)
#define QSERDES_COM_SSC_ADJ_PER1			(0x00000014)
#define QSERDES_COM_SSC_ADJ_PER2			(0x00000018)
#define QSERDES_COM_SSC_PER1				(0x0000001C)
#define QSERDES_COM_SSC_PER2				(0x00000020)
#define QSERDES_COM_SSC_STEP_SIZE1_MODE0		(0x00000024)
#define QSERDES_COM_SSC_STEP_SIZE2_MODE0		(0x00000028)
#define QSERDES_COM_BIAS_EN_CLKBUFLR_EN			(0x00000044)
#define QSERDES_COM_CLK_ENABLE1				(0x00000048)
#define QSERDES_COM_SYS_CLK_CTRL			(0x0000004C)
#define QSERDES_COM_SYSCLK_BUF_ENABLE			(0x00000050)
#define QSERDES_COM_PLL_IVCO				(0x00000058)
#define QSERDES_COM_CP_CTRL_MODE0			(0x00000074)
#define QSERDES_COM_PLL_RCTRL_MODE0			(0x0000007C)
#define QSERDES_COM_PLL_CCTRL_MODE0			(0x00000084)
#define QSERDES_COM_SYSCLK_EN_SEL			(0x00000094)
#define QSERDES_COM_RESETSM_CNTRL			(0x0000009C)
#define QSERDES_COM_LOCK_CMP_EN				(0x000000A4)
#define QSERDES_COM_LOCK_CMP1_MODE0			(0x000000AC)
#define QSERDES_COM_LOCK_CMP2_MODE0			(0x000000B0)
#define QSERDES_COM_DEC_START_MODE0			(0x000000BC)
#define QSERDES_COM_DIV_FRAC_START1_MODE0		(0x000000CC)
#define QSERDES_COM_DIV_FRAC_START2_MODE0		(0x000000D0)
#define QSERDES_COM_DIV_FRAC_START3_MODE0		(0x000000D4)
#define QSERDES_COM_INTEGLOOP_GAIN0_MODE0		(0x000000EC)
#define QSERDES_COM_INTEGLOOP_GAIN1_MODE0		(0x000000F0)
#define QSERDES_COM_VCO_TUNE_CTRL			(0x00000108)
#define QSERDES_COM_VCO_TUNE_MAP			(0x0000010C)
#define QSERDES_COM_VCO_TUNE1_MODE0			(0x00000110)
#define QSERDES_COM_VCO_TUNE2_MODE0			(0x00000114)
#define QSERDES_COM_CMN_STATUS				(0x00000140)
#define QSERDES_COM_CLK_SEL				(0x00000154)
#define QSERDES_COM_HSCLK_SEL				(0x00000158)
#define QSERDES_COM_CORECLK_DIV_MODE0			(0x00000168)
#define QSERDES_COM_CORE_CLK_EN				(0x00000174)
#define QSERDES_COM_C_READY_STATUS			(0x00000178)
#define QSERDES_COM_CMN_CONFIG				(0x0000017C)
#define QSERDES_COM_SVS_MODE_CLK_SEL			(0x00000184)


#define DP_PHY_PLL_POLL_SLEEP_US			(500)
#define DP_PHY_PLL_POLL_TIMEOUT_US			(10000)


#define EDP_VCO_RATE_8100MHZDIV1000			(8100000UL)
#define EDP_VCO_RATE_8640MHZDIV1000			(8640000UL)
#define EDP_VCO_RATE_9720MHZDIV1000			(9720000UL)
#define EDP_VCO_RATE_10800MHZDIV1000			(10800000UL)
#define EDP_VCO_RATE_11880MHZDIV1000			(11880000UL)

#endif /* EDP_V510_REG */
