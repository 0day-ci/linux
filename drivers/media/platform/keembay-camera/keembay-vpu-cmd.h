/* SPDX-License-Identifier: GPL-2.0-only */
/*
 * Intel Keem Bay camera VPU Commands
 *
 * Copyright (C) 2021 Intel Corporation
 */
#ifndef KEEMBAY_VPU_CMD_H
#define KEEMBAY_VPU_CMD_H

enum {
	/* IC_EVENT_TYPE enum to define event messages */
	KMB_IC_EVENT_TYPE_SUCCESSFUL = 0,
	KMB_IC_EVENT_TYPE_CONFIG_ISP_PIPE,
	KMB_IC_EVENT_TYPE_BUILD_ISP_PIPE,
	KMB_IC_EVENT_TYPE_DELETE_ISP_PIPE,

	KMB_IC_EVENT_TYPE_INIT_MAX
};

enum {
	/* Control -> Source */
	KMB_IC_EVENT_TYPE_CONFIG_SOURCE = (KMB_IC_EVENT_TYPE_INIT_MAX + 1),
	KMB_IC_EVENT_TYPE_START_SOURCE,
	KMB_IC_EVENT_TYPE_STOP_SOURCE,
	KMB_IC_EVENT_TYPE_CONFIG_SOURCE_DYNAMIC,
	KMB_IC_EVENT_TYPE_SOURCE_SEND_USER_DATA,

	/* Source -> Control */
	KMB_IC_EVENT_TYPE_SOURCE_CONFIGURED,
	KMB_IC_EVENT_TYPE_SOURCE_STARTED,
	KMB_IC_EVENT_TYPE_SOURCE_STOPPED,
	KMB_IC_EVENT_TYPE_SOURCE_DYN_CONFIGURED,

	/* Source events */
	KMB_IC_EVENT_TYPE_READOUT_START,
	KMB_IC_EVENT_TYPE_READOUT_END,
	KMB_IC_EVENT_TYPE_LINE_REACHED,

	/* ISP events */
	KMB_IC_EVENT_TYPE_ISP_START,
	KMB_IC_EVENT_TYPE_ISP_END,
	KMB_IC_EVENT_TYPE_STATS_READY,
	KMB_IC_EVENT_TYPE_ISP_CONFIG_ACCEPTED,
	KMB_IC_EVENT_TYPE_ZSL_LOCKED,
	KMB_IC_EVENT_TYPE_CAPTURE_MADE,

	/* Isp config events */
	KMB_IC_EVENT_TYPE_CONFIG_ISP,
	KMB_IC_EVENT_TYPE_LOCK_ZSL,
	KMB_IC_EVENT_TYPE_CAPTURE,
	KMB_IC_EVENT_TYPE_UNLOCK_ZSL,
	KMB_IC_EVENT_TYPE_ZSL_ADD,
	KMB_IC_EVENT_TYPE_ERROR,

	KMB_IC_EVENT_MAX,
};

enum {
	KMB_IC_ERROR_PIPE_INIT = (KMB_IC_EVENT_MAX + 1),
	KMB_IC_ERROR_ISP_CONFIG,
	KMB_IC_ERROR_YUV_BUFF_MISSING,

	KMB_IC_ERROR_ISP_MAX,
};

enum {
	KMB_IC_ERROR_SRC_MIPI_WRONG_STATE = (KMB_IC_ERROR_ISP_MAX + 1),
	KMB_IC_ERROR_SRC_MIPI_BAD_PARAMETER,
	KMB_IC_ERROR_SRC_MIPI_CFG_MISSING,
	KMB_IC_ERROR_SRC_MIPI_CFG_SKIPPED,
	KMB_IC_ERROR_SRC_MIPI_OUT_BUFFERS_NOT_AVAILABLE,
	KMB_IC_ERROR_SRC_MIPI_EOF_TIMEOUT,
	KMB_IC_ERROR_SRC_MIPI_LOC_BUF_NOT_AVAILABLE,
	KMB_IC_ERROR_SRC_MIPI_INTERNAL_ERROR,
	KMB_IC_ERROR_SRC_TRANSMISSION_ERROR,
	KMB_IC_ERROR_SRC_DRIVER_UNEXPECTED,

	KMB_IC_ERROR_SRC_MIPI_MAX,
};

enum {
	KMB_IC_ERROR_NO_ZSL_BUFFS_AVAILABLE = (KMB_IC_ERROR_SRC_MIPI_MAX + 1),
	KMB_IC_ERROR_TRIGGER_NOT_EXISTING_BUFF,

	KMB_IC_ERROR_ISP_CTRL_MAX,
};

/**
 * struct kmb_ic_ev - Event structure
 *
 * @ev_info: Describe ISP event
 * @ev_info.inst_id: Pipe id
 * @ev_info.seq_nr: Frame number
 * @ev_info.user_data_base_addr01: Address of isp cfg buffer in CMA
 * @ev_info.user_data_base_addr02: Address of isp cfg buffer in CMA
 * @ev_info.ts: Timestamp in NS
 * @ctrl: Value from the IC_EVENT_TYPE enum
 */
struct kmb_ic_ev {
	struct {
		u32 inst_id;
		u32 seq_nr;
		u32 user_data_base_addr01;
		u32 user_data_base_addr02;
		s64 ts;
	} ev_info;
	u32 ctrl;
} __packed __aligned(64);

#endif  /* KEEMBAY_VPU_CMD_H */
