Kernel driver max31790
======================

Supported chips:

  * Maxim MAX31790

    Prefix: 'max31790'

    Addresses scanned: -

    Datasheet: https://pdfserv.maximintegrated.com/en/ds/MAX31790.pdf

Author: Il Han <corone.il.han@gmail.com>


Description
-----------

This driver implements support for the Maxim MAX31790 chip.

The MAX31790 controls the speeds of up to six fans using six independent
PWM outputs. The desired fan speeds (or PWM duty cycles) are written
through the I2C interface. The outputs drive "4-wire" fans directly,
or can be used to modulate the fan's power terminals using an external
pass transistor.

Tachometer inputs monitor fan tachometer logic outputs for precise (+/-1%)
monitoring and control of fan RPM as well as detection of fan failure.
Six pins are dedicated tachometer inputs. Any of the six PWM outputs can
also be configured to serve as tachometer inputs.

About pwm[1-6]_enable
---------------------
0 - full-speed
    The chip doesn't have a specific way to set "full speed", so setting
    pwm[1-6]_enable to 0 is just "set PWM mode with 255 duty cycle".
1 - PWM mode
    Fan speed is controlled by writing a value to pwm[1-6].
2 - RPM mode
    Fan speed is controlled by writing a value to fan[1-6]_target.

About fan[1-6]_fault
--------------------
In PWM (or full-speed) mode, if the input RPM goes below what is set
in fan[1-6]_target, fan[1-6]_fault gets set to 1. In other words,
fan[1-6]_target works as the minimum input RPM before a fan fault goes off.

In RPM mode, fan fault is set when the fan spins "too slowly" (exact
conditions are in the datasheet). RPM mode depends on four variables:
    target_speed:        This is set by fan[1-6]_target.
    speed_range:         This is set automatically when setting target_speed
                         or manually by fan[1-12]_div.
    pwm_rate_of_change:  NOT set by the driver.
    fan_window:          NOT set by the driver.

The last two values are not set by the driver, because there's no generic way to
compute them. You should set them manually through i2c (in the bootloader for
example). Check the datasheet for details.

The fan fault value latches, to reset it, set a value to pwm[1-6]
or fan[1-6]_target.

About fan[1-12]_div
-------------------
This value affects the measurable range of the chip. The driver sets this value
automatically in RPM based on fan[1-6]_target. In PWM mode, you should set this
value manually based on the details from the datasheet. Setting the speed range
is disabled while in RPM mode to prevent overwriting the automatically
calculated value.

Sysfs entries
-------------

================== === =============================================================
fan[1-12]_enable   RW  enable fan speed monitoring
fan[1-12]_input    RO  fan tachometer speed in RPM
fan[1-12]_fault    RO  fan experienced fault
fan[1-12]_div      RW  set the measurable speed range, not available in RPM mode
fan[1-6]_target    RW  RPM mode = desired fan speed
                       PWM mode = minimum fan speed until fault
pwm[1-6]_enable    RW  regulator mode, 0=full speed, 1=manual (pwm) mode, 2=rpm mode
                       setting rpm mode sets fan*_enable to 1
pwm[1-6]           RW  fan target duty cycle (0-255)
================== === =============================================================
