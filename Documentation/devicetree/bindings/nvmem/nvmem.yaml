# SPDX-License-Identifier: (GPL-2.0 OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/nvmem/nvmem.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: NVMEM (Non Volatile Memory) Device Tree Bindings

maintainers:
  - Srinivas Kandagatla <srinivas.kandagatla@linaro.org>

description: |
  This binding is intended to represent the location of hardware
  configuration data stored in NVMEMs like eeprom, efuses and so on.

  On a significant proportion of boards, the manufacturer has stored
  some data on NVMEM, for the OS to be able to retrieve these
  information and act upon it. Obviously, the OS has to know about
  where to retrieve these data from, and where they are stored on the
  storage device.

properties:
  "#address-cells":
    const: 1

  "#size-cells":
    const: 1

  '#nvmem-cell-cells':
    enum: [0, 1]
    description:
      Must be 1 if the transformations has multiple output values.
      The argument is then the index into the list of output values.
      For example, if the nvmem cell only specify a base ethernet
      address the transformation can then create different individual
      ethernet addresses.

  read-only:
    $ref: /schemas/types.yaml#/definitions/flag
    description:
      Mark the provider as read only.

  transformation:
    description:
      Transform the content of a NVMEM cell. Sometimes it is necessary
      to preprocess the content of a cell so it is usable by the NVMEM
      consumer. There are also cases where one NVMEM cell value can
      generate a list of values.

      Use one of the NVMEM_T_* prefixed definitions from the header
      include/dt-bindings/nvmem/nvmem.h.

      Some transformations might have additional arguments.
    $ref: /schemas/types.yaml#/definitions/uint32


  wp-gpios:
    description:
      GPIO to which the write-protect pin of the chip is connected.
      The write-protect GPIO is asserted, when it's driven high
      (logical '1') to block the write operation. It's deasserted,
      when it's driven low (logical '0') to allow writing.
    maxItems: 1

patternProperties:
  "@[0-9a-f]+(,[0-7])?$":
    type: object

    properties:
      reg:
        maxItems: 1
        description:
          Offset and size in bytes within the storage device.

      bits:
        maxItems: 1
        items:
          items:
            - minimum: 0
              maximum: 7
              description:
                Offset in bit within the address range specified by reg.
            - minimum: 1
              description:
                Size in bit within the address range specified by reg.

    required:
      - reg

additionalProperties: true

examples:
  - |
      #include <dt-bindings/gpio/gpio.h>

      qfprom: eeprom@700000 {
          #address-cells = <1>;
          #size-cells = <1>;
          reg = <0x00700000 0x100000>;

          wp-gpios = <&gpio1 3 GPIO_ACTIVE_HIGH>;

          /* ... */

          /* Data cells */
          tsens_calibration: calib@404 {
              reg = <0x404 0x10>;
          };

          tsens_calibration_bckp: calib_bckp@504 {
              reg = <0x504 0x11>;
              bits = <6 128>;
          };

          pvs_version: pvs-version@6 {
              reg = <0x6 0x2>;
              bits = <7 2>;
          };

          speed_bin: speed-bin@c{
              reg = <0xc 0x1>;
              bits = <2 3>;
          };

          ethernet_base_mac: base-mac-address@100 {
              #nvmem-cell-cells = <1>;
              reg = <0x100 0x6>;
              transformation = <NVMEM_T_ETH_OFFSET 0 1 2 7>;
          };
      };

...
