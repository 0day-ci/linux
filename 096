#! /bin/sh
# FS QA Test No. 095
#
# test out mkfs_xfs output on IRIX/Linux and some of its error handling
# ensure pv#920679 is addressed
#
#-----------------------------------------------------------------------
# Copyright (c) 2000-2004 Silicon Graphics, Inc.  All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
# 
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write the Free Software Foundation, Inc., 59
# Temple Place - Suite 330, Boston MA 02111-1307, USA.
# 
# Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,
# Mountain View, CA  94043, or:
# 
# http://www.sgi.com 
# 
# For further information regarding this notice, see: 
# 
# http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/
#-----------------------------------------------------------------------
#
# creator
owner=tes@sgi.com

seq=`basename $0`
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
    cd /
    rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common.rc
. ./common.filter
. ./common.log

# 
# filter out counts which will vary
#   - blocks, agsize, agcount, device name
# filter out differences between linux and irix:
#   - sectsz on Linux
#   - mmr, mixed-case on IRIX
#   - trailing spaces on Linux but not on IRIX
#
_mkfs_filter()
{
   tee -a $seq.full | \
   sed \
	-e 's/blocks=[0-9][0-9]*/blocks=N/' \
	-e 's/agsize=[0-9][0-9]*/agsize=N/' \
	-e 's/agcount=[0-9][0-9]*/agcount=N/' \
	-e 's/meta-data=[^ ]*/meta-data=DEV/' \
        -e 's/ *isize/ isize/' \
	-e '/ *= *sectsz=[0-9][0-9]* *$/d' \
	-e '/ *= *mmr=[0-9][0-9]* *$/d' \
	-e 's/ *mixed-case=[YN]//' \
	-e 's/sectsz=[0-9][0-9]* *//' \
	-e 's/ *$//'
}

# real QA test starts here
rm -f $seq.full

# Modify as appropriate.
_supported_fs xfs
_supported_os IRIX Linux
_require_scratch
_require_v2log

# maximum log record size
max_lr_size=`expr 256 \* 1024`

big_su=`expr $max_lr_size + 4096`

#
# Test out various mkfs param combinations
#
cat >$tmp.seq.params <<EOF
# su too big but must be a multiple of fs block size too
  -l version=2,su=`expr $max_lr_size + 512`
# test log stripe greater than LR size
  -l version=2,su=$big_su
# same test but get log stripe from data stripe
  -l version=2 -d su=$big_su,sw=1
# test out data stripe
  -d su=$big_su,sw=1
# test out data stripe the same but using sunit & swidth
  -d sunit=`expr $big_su / 512`,swidth=`expr $big_su / 512`
EOF


#
# call mkfs in a loop for various params
#
echo ""
cat $tmp.seq.params \
| while read mkfs
do
    if echo $mkfs | grep -q '^#'; then
        # print out header & ignore comment
	echo $mkfs
	continue
    fi
    echo "--- mkfs=$mkfs ---"
    export MKFS_OPTIONS="$mkfs"
    _scratch_mkfs_xfs | _mkfs_filter
    echo ""
    echo ""
done

# success, all done
status=0
exit
