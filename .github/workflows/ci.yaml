on:
  pull_request: {}
  push:
    branches: [rust]

jobs:
  ci:
    runs-on: ubuntu-20.04
    timeout-minutes: 15

    strategy:
      matrix:
        mode: [debug, release]
        module: [builtin, loadable]
        outputdir: [src, build]

    steps:
      # Setup
      - uses: actions/checkout@v2
      - run: wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
      - run: sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'
      - run: sudo apt-get update -y
      - run: sudo apt-get install -y clang-11 libelf-dev qemu-system-x86 busybox-static
      - run: rustup default nightly-2021-01-02
      - run: rustup component add rustfmt
      - run: rustup component add rust-src

      # Build
      - run: cp .github/workflows/kernel-${{ matrix.mode }}.config .config

      - if: matrix.module == 'loadable'
        run: sed -i -E 's/^(CONFIG_RUST_EXAMPLE=)(y)$/\1m/g' .config

      - if: matrix.outputdir == 'build'
        run: mkdir build && mv .config build/.config

      - if: matrix.outputdir == 'src'
        run: make         CC=clang-11 LLVM_CONFIG_PATH=llvm-config-11 -j3
      - if: matrix.outputdir == 'build'
        run: make O=build CC=clang-11 LLVM_CONFIG_PATH=llvm-config-11 -j3

      # Run
      - if: matrix.module == 'builtin'
        run: sed -i '/rust_example/d' .github/workflows/qemu-initramfs.desc

      - if: matrix.outputdir == 'build'
        run: sed -i 's:drivers/:build/drivers/:' .github/workflows/qemu-initramfs.desc

      - if: matrix.outputdir == 'src'
        run:       usr/gen_init_cpio .github/workflows/qemu-initramfs.desc > qemu-initramfs.img
      - if: matrix.outputdir == 'build'
        run: build/usr/gen_init_cpio .github/workflows/qemu-initramfs.desc > qemu-initramfs.img

      - if: matrix.outputdir == 'src'
        run: qemu-system-x86_64 -kernel       arch/x86/boot/bzImage -initrd qemu-initramfs.img -cpu Cascadelake-Server -smp 2 -nographic -no-reboot -append "console=ttyS0 ${{ matrix.module == 'builtin' && 'rust_example.my_i32=123321' || '' }}" | tee qemu-stdout.log
      - if: matrix.outputdir == 'build'
        run: qemu-system-x86_64 -kernel build/arch/x86/boot/bzImage -initrd qemu-initramfs.img -cpu Cascadelake-Server -smp 2 -nographic -no-reboot -append "console=ttyS0 ${{ matrix.module == 'builtin' && 'rust_example.my_i32=123321' || '' }}" | tee qemu-stdout.log

      # Check
      - run: grep -F 'Rust Example (init)' qemu-stdout.log
      - run: "grep 'my_i32: \\+123321' qemu-stdout.log"
      - if: matrix.module == 'loadable'
        run: grep -F 'Rust Example (exit)' qemu-stdout.log

      # Report
      - if: matrix.outputdir == 'src' && matrix.module == 'loadable'
        run: ls -l       drivers/char/rust_example/rust_example.ko
      - if: matrix.outputdir == 'build' && matrix.module == 'loadable'
        run: ls -l build/drivers/char/rust_example/rust_example.ko

      - if: matrix.outputdir == 'src'
        run: ls -l       vmlinux       arch/x86/boot/bzImage
      - if: matrix.outputdir == 'build'
        run: ls -l build/vmlinux build/arch/x86/boot/bzImage

      - if: matrix.outputdir == 'src'
        run: size        vmlinux
      - if: matrix.outputdir == 'build'
        run: size  build/vmlinux
