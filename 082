#! /bin/sh
# XFS QA Test No. 082
#
# Test out the v2 stripe logs with logprint
#
#-----------------------------------------------------------------------
# Copyright (c) 2000-2003 Silicon Graphics, Inc.  All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
# 
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write the Free Software Foundation, Inc., 59
# Temple Place - Suite 330, Boston MA 02111-1307, USA.
# 
# Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,
# Mountain View, CA  94043, or:
# 
# http://www.sgi.com 
# 
# For further information regarding this notice, see: 
# 
# http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/
#-----------------------------------------------------------------------
#
# creator
owner=root@icy.melbourne.sgi.com

seq=`basename $0`
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common.rc
. ./common.filter
. ./common.log

_cleanup()
{
    _cleanup_logfiles
    rm -f $tmp.*
    echo "*** unmount"
    umount $SCRATCH_MNT 2>/dev/null
}
trap "_cleanup; exit \$status" 0 1 2 3 15

# real QA test starts here
_notrun "Not finished yet"

# prelim
rm -f $seq.full $tmp.*
_require_scratch
_clear_opts
echo "*** init FS"
umount $SCRATCH_DEV >/dev/null 2>&1

cat >$tmp.seq.params <<EOF
# mkfs-opt        mount-opt            start-blk
  -lversion=2 -ologbsize=32k           2
  -lversion=2,su=4096 -ologbsize=32k   8
  -lversion=2,su=32768 -ologbsize=32k  64
# expect following line to fail
  -lversion=2,su=36864 -ologbsize=32k  72
EOF

# Do the work for various log params which
# should not effect the data content of the log
# Try with and without sync'ing - sync'ing will mean that
# the log will be written out unfilled and thus the log 
# stripe can have an effect.
#
for s in sync nosync ; do
    cat $tmp.seq.params \
    | while read mkfs mnt start restofline
    do
	if [ "$mkfs" != "#" ]; then 
	    echo "--- mkfs=$mkfs, mnt=$mnt, start=$start, sync=$s ---"
	    _mkfs_log $mkfs
	    if [ $s = "sync" ]; then
		_create_log_sync $mnt
	    else
		_create_log $mnt
	    fi
	    _check_log

	    sync_suffix=".$s"

	    if [ $s = "sync" ]; then
		# if sync then we have chance of DATA FORK EXTENTS items
                # not hanging around very long due to inode syncing to disk
		# (see comment in xfs_iflush_int())
		# and this is to hard to reconcile in the op output
		:
	    else
		_print_operation
		_cmp_op_output $seq.noquota.op $filtered
	    fi

	    _print_transaction_inode $start
	    _cmp_output $seq.noquota.trans_inode $filtered

	    _print_transaction_buf $start
	    _cmp_output $seq.noquota.trans_buf $filtered
	fi
    done
done

# got thru it all so we may have success
if [ ! -e $tmp.error ]; then
    status=0
fi

exit
