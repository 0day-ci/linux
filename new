#! /bin/sh
#
#-----------------------------------------------------------------------
#  Copyright (c) 2000-2005 Silicon Graphics, Inc.  All Rights Reserved.
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
#  USA
#
#  Contact information: Silicon Graphics, Inc., 1500 Crittenden Lane,
#  Mountain View, CA 94043, USA, or: http://www.sgi.com
#-----------------------------------------------------------------------
#
#
# Make a new test
#

# generic initialization
iam=new
. ./common.rc

trap "rm -f /tmp/$$.; exit" 0 1 2 3 15

_cleanup()
{
    :
}

if [ ! -f group ]
then
    echo "Creating the group index ..."
    cat <<'End-of-File' >group
# QA groups control
#
# define groups and default group owners
# do not start group name with a digit
#

# catch-all
#
other		some-user-login

# test-group association ... one line per test
#
End-of-File
fi

if [ ! -w group ]
then
    chmod u+w group
    echo "Warning: making the index file \"group\" writeable"
fi

if make
then
    :
else
    echo "Warning: make failed -- some tests may be missing"
fi

last=`grep '^[0-9][0-9]* ' group | sort | tail -1 | sed -e 's/[ 	].*//'`
# get rid of leading 0s as can be interpreted as octal
last=`echo $last | sed 's/^0*//'`
id=`$AWK_PROG </dev/null 'BEGIN{printf "%03d\n",'$last'+1}'`
echo "Next test is $id"

if [ -f $id ]
then
    echo "Error: test $id already exists!"
    _cleanup
    exit 1
fi

echo -n "Creating skeletal script for you to edit ..."

cat <<End-of-File >$id
#! /bin/sh
# FS QA Test No. $id
#
# what am I here for?
#
#-----------------------------------------------------------------------
# Copyright (c) 2000-2005 Silicon Graphics, Inc.  All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
# 
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write the Free Software Foundation, Inc., 59
# Temple Place - Suite 330, Boston MA 02111-1307, USA.
# 
# Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,
# Mountain View, CA  94043, or:
# 
# http://www.sgi.com 
# 
# For further information regarding this notice, see: 
# 
# http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/
#-----------------------------------------------------------------------
#
# creator
owner=$USER@`_get_fqdn`

seq=\`basename \$0\`
echo "QA output created by \$seq"

here=\`pwd\`
tmp=/tmp/\$\$
status=1	# failure is the default!
trap "_cleanup; exit \\\$status" 0 1 2 3 15

_cleanup()
{
    cd /
    rm -f \$tmp.*
}

# get standard environment, filters and checks
. ./common.rc
. ./common.filter

# real QA test starts here

# Modify as appropriate.
_supported_fs xfs udf nfs
_supported_os IRIX Linux

# if error
exit

# optional stuff if your test has verbose output to help resolve problems
#echo
#echo "If failure, check \$seq.full (this) and \$seq.full.ok (reference)"

# success, all done
status=0
exit
End-of-File

sleep 2		# latency to read messages to this point
echo ""

chmod 755 $id
${EDITOR-vi} $id

if [ $# -eq 0 ]
then
    while true
    do
	echo -n "Add to group(s) [other] (? for list): "
	read ans
	[ -z "$ans" ] && ans=other
	if [ "X$ans" = "X?" ]
	then
	    $AWK_PROG <group '
BEGIN		{ text = "# ???" }
/^[a-zA-z]/	{ printf "%-16.16s %s\n",$1,text; text = "# ???"; next }
NF < 2		{ next }
		{ text = $0 }' \
	    | sort
	else
	    break
	fi
    done
else
    # expert mode, groups are on the command line
    #
    for g in $*
    do
	if grep "^$g[ 	]" group >/dev/null
	then
	    :
	else
	    echo "Warning: group \"$g\" not defined in ./group"
	fi
    done
    ans="$*"
fi

echo -n "Adding $id to group index ..."
echo "$id $ans" >>group
echo " done."

exit 0
