#! /bin/sh
# XFS QA Test No. 069
# $Id: 069,v 1.2 2002/09/04 11:14:37 fsgqa Exp $
#
# Test out writes with O_APPEND flag sets.
#
#-----------------------------------------------------------------------
# Copyright (c) 2002 Silicon Graphics, Inc.  All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
# 
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write the Free Software Foundation, Inc., 59
# Temple Place - Suite 330, Boston MA 02111-1307, USA.
# 
# Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,
# Mountain View, CA  94043, or:
# 
# http://www.sgi.com 
# 
# For further information regarding this notice, see: 
# 
# http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/
#-----------------------------------------------------------------------
#
# creator
owner=nathans@sgi.com

seq=`basename $0`
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=0	# success is the default!
trap "rm -rf $tmp.*; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common.rc
. ./common.filter

# real QA test starts here

_require_scratch
rm -f $seq.full

umount $SCRATCH_DEV >/dev/null 2>&1

echo "*** mkfs"
mkfs_xfs $SCRATCH_DEV >/dev/null \
	|| _fail "mkfs failed"
  
echo "*** mount FS"
mount -t xfs $SCRATCH_DEV $SCRATCH_MNT >/dev/null \
	|| _fail "mount failed"

cd $SCRATCH_MNT

sizes="1 20 300 40000 3000000 12345"
for size in $sizes ; do
	$here/src/append_writer $size &
	echo $! $size >> pids
done

cd $here

wait
ls -lh >> $seq.full
echo "*** PIDs file" >> $seq.full
cat $SCRATCH_MNT/pids >> $seq.full

cat $SCRATCH_MNT/pids | while read pid size
do
	echo "*** checking file with $size integers"
	echo checking pid=$pid size=$size >> $seq.full
	$here/src/append_reader $SCRATCH_MNT/testfile.$pid
	status=$?
	[ $status -ne 0 ] && \
		echo "maybe corrupt O_APPEND to $SCRATCH_MOUNT/testfile.$pid!"
	echo status: $status >> $seq.full
done

# success, all done
exit
