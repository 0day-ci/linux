#! /bin/bash
# FS QA Test ext4/031
#
# This is a regression test for kernel patch:
#   ext4: prevent data corruption with inline data + DAX
# created by Ross Zwisler <ross.zwisler@linux.intel.com>
#
#-----------------------------------------------------------------------
# Copyright (c) 2017-2018 Intel Corporation.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# remove previous $seqres.full before test
rm -f $seqres.full

# DAX needs to be off so we can create an inode with inline data
SAVE_MOUNT_OPTIONS="$MOUNT_OPTIONS"
MOUNT_OPTIONS=""

# Modify as appropriate.
_supported_os Linux
_supported_fs ext4
_require_scratch_dax
_require_test_program "t_ext4_dax_inline_corruption"
_require_scratch_ext4_feature "inline_data"

# real QA test starts here
_scratch_mkfs_ext4 -O inline_data > $seqres.full 2>&1

TESTFILE=$SCRATCH_MNT/testfile

_scratch_mount  >> $seqres.full 2>&1

echo "Need to make some inline data..." > $TESTFILE

export MOUNT_OPTIONS="$SAVE_MOUNT_OPTIONS"

_scratch_unmount >> $seqres.full 2>&1
_scratch_mount "-o dax" >> $seqres.full 2>&1

if [[ $? != 0 ]]; then
	# _require_scratch_dax already verified that we could mount with DAX.
	# Failure here is expected because we have inline data.
	echo "Silence is golden"
	status=0
	exit
fi

$here/src/t_ext4_dax_inline_corruption $TESTFILE

# success, all done
echo "Silence is golden"
status=0
exit
