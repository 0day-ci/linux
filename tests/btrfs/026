#! /bin/bash
# FS QA Test No. 026
#
# Tests file clone functionality of btrfs ("reflinks"):
#   - Reflink a file
#   - Reflink the reflinked file
#   - Modify the original file
#   - Modify the reflinked file
#
#-----------------------------------------------------------------------
# Copyright (c) 2014, Oracle and/or its affiliates.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1    # failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
    cd /
    rm -f $tmp.*
}

# get standard environment, filters and checks
. common/rc
. common/filter

# real QA test starts here
_supported_fs btrfs
_supported_os Linux

_require_xfs_io_command "fiemap"
_require_cp_reflink
_require_test

TESTDIR1=$TEST_DIR/test-$seq
rm -rf $TESTDIR1
mkdir $TESTDIR1

_checksum_files() {
    for F in original copy1 copy2
    do
        md5sum $TESTDIR1/$F | _filter_test_dir
    done
}

rm -f $seqres.full

echo "Create the original file and reflink to copy1, copy2"
$XFS_IO_PROG -f -c 'pwrite -S 0x61 0 9000' $TESTDIR1/original \
    >> $seqres.full 2>&1
cp --reflink $TESTDIR1/original $TESTDIR1/copy1
cp --reflink $TESTDIR1/copy1 $TESTDIR1/copy2
_verify_reflink $TESTDIR1/original $TESTDIR1/copy1
_verify_reflink $TESTDIR1/original $TESTDIR1/copy2
echo "Original md5sums:"
_checksum_files

echo "Overwrite original file with new data"
$XFS_IO_PROG -c 'pwrite -S 0x62 0 9000' $TESTDIR1/original \
    >> $seqres.full 2>&1
echo "md5sums after overwriting original:"
_checksum_files

echo "Overwrite copy1 with different new data"
$XFS_IO_PROG -c 'pwrite -S 0x63 0 9000' $TESTDIR1/copy1 \
    >> $seqres.full 2>&1
echo "md5sums after overwriting copy1:"
_checksum_files

# success, all done
status=0
exit
