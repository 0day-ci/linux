#! /bin/bash
# FS QA Test No. btrfs/030
#
# Regression test for btrfs' incremental send feature:
#
# 1) Create several nested directories;
# 2) Create a read only snapshot;
# 3) Change the parentship of some of the deepest directories in a reverse
#    way, so that parents become children and children become parents;
# 4) Create another read only snapshot and use it for an incremental send
#    relative to the first snapshot.
#
# At step 4 btrfs' send entered an infinite loop, increasing the memory it
# used while building path strings until a krealloc was unable to allocate
# more memory, which caused a warning dump in dmesg.
#
#-----------------------------------------------------------------------
# Copyright (c) 2014 Filipe Manana.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=`mktemp -d`
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
    rm -fr $tmp
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# real QA test starts here
_supported_fs btrfs
_supported_os Linux
_require_scratch
_need_to_be_root

FSSUM_PROG=$here/src/fssum
[ -x $FSSUM_PROG ] || _notrun "fssum not built"

rm -f $seqres.full

_scratch_mkfs >/dev/null 2>&1
_scratch_mount


mkdir -p $SCRATCH_MNT/a/b/c
echo "hello" > $SCRATCH_MNT/a/b/c/file.txt
mkdir $SCRATCH_MNT/a/b/c/d
mkdir $SCRATCH_MNT/a/b/c2
mkdir $SCRATCH_MNT/a/b/www
echo "hey" > $SCRATCH_MNT/a/b/foobar.txt
mkdir -p $SCRATCH_MNT/a/b/c3/x/y

# Directory tree looks like:
#
# .                         (ino 256)
# |-- a/                    (ino 257)
#     |-- b/                (ino 258)
#         |-- c/            (ino 259)
#         |   |-- file.txt  (ino 260)
#         |   |-- d/        (ino 261)
#         |
#         |-- c2/           (ino 262)
#         |-- www/          (ino 263)
#         |-- foobar.txt    (ino 264)
#         |
#         |-- c3/           (ino 265)
#             |-- x/        (ino 266)
#                 |-- y/    (ino 267)

run_check $BTRFS_UTIL_PROG subvolume snapshot -r $SCRATCH_MNT \
    $SCRATCH_MNT/mysnap1

echo " world" >> $SCRATCH_MNT/a/b/c/file.txt
mv $SCRATCH_MNT/a/b/c/d $SCRATCH_MNT/a/b/c2/d2
mv $SCRATCH_MNT/a/b/c $SCRATCH_MNT/a/b/c2/d2/cc
mv $SCRATCH_MNT/a/b/c3/x/y $SCRATCH_MNT/a/b/c2/y2
mv $SCRATCH_MNT/a/b/c3/x $SCRATCH_MNT/a/b/c2/y2/x2
mv $SCRATCH_MNT/a/b/c3 $SCRATCH_MNT/a/b/c2/y2/x2/Z
mv $SCRATCH_MNT/a/b/www $SCRATCH_MNT/a/b/c2/y2/x2/WWW
mv $SCRATCH_MNT/a/b/foobar.txt $SCRATCH_MNT/a/b/c2/y2/x2/qwerty.txt
ln $SCRATCH_MNT/a/b/c2/d2/cc/file.txt $SCRATCH_MNT/a/b/c2/y2/x2/Z/file_link.txt
mv $SCRATCH_MNT/a/b/c2/d2/cc/file.txt $SCRATCH_MNT/a/b/c2/y2/x2

# Directory tree now looks like:
#
# .                                         (ino 256)
# |-- a/                                    (ino 257)
#     |-- b/                                (ino 258)
#         |-- c2/                           (ino 262)
#             |-- d2/                       (ino 261)
#             |   |-- cc/                   (ino 259)
#             |        |-- file.txt         (ino 260)
#             |-- y2/                       (ino 267)
#                 |-- x2/                   (ino 266)
#                     |-- qwerty.txt        (ino 264)
#                     |-- WWW/              (ino 263)
#                     |-- Z/                (ino 265)
#                         |-- file_link.txt

run_check $BTRFS_UTIL_PROG subvolume snapshot -r $SCRATCH_MNT \
    $SCRATCH_MNT/mysnap2

run_check $FSSUM_PROG -A -f -w $tmp/1.fssum $SCRATCH_MNT/mysnap1
run_check $FSSUM_PROG -A -f -w $tmp/2.fssum -x $SCRATCH_MNT/mysnap2/mysnap1 \
    $SCRATCH_MNT/mysnap2

run_check $BTRFS_UTIL_PROG send $SCRATCH_MNT/mysnap1 -f $tmp/1.snap
run_check $BTRFS_UTIL_PROG send -p $SCRATCH_MNT/mysnap1 $SCRATCH_MNT/mysnap2 \
    -f $tmp/2.snap

_scratch_unmount
_check_btrfs_filesystem $SCRATCH_DEV
_scratch_mkfs >/dev/null 2>&1
_scratch_mount

run_check $BTRFS_UTIL_PROG receive $SCRATCH_MNT -f $tmp/1.snap
run_check $FSSUM_PROG -r $tmp/1.fssum $SCRATCH_MNT/mysnap1 2>> $seqres.full

run_check $BTRFS_UTIL_PROG receive $SCRATCH_MNT -f $tmp/2.snap
run_check $FSSUM_PROG -r $tmp/2.fssum $SCRATCH_MNT/mysnap2 2>> $seqres.full

_scratch_unmount
_check_btrfs_filesystem $SCRATCH_DEV

status=0
exit
