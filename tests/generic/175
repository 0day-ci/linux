#! /bin/bash
# FS QA Test No. 175
#
# Try to hit the maximum reference count (eek!)
#
# This test runs extremely slowly, so it's not automatically run anywhere.
#
#-----------------------------------------------------------------------
# Copyright (c) 2015, Oracle and/or its affiliates.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------

seq=`basename "$0"`
seqres="$RESULT_DIR/$seq"
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1    # failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
    cd /
    rm -rf "$tmp".* "$TESTDIR1"
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/attr
. ./common/reflink

# real QA test starts here
_supported_os Linux
_require_scratch_reflink
_require_cp_reflink

rm -f "$seqres.full"

echo "Format and mount"
_scratch_mkfs > "$seqres.full" 2>&1
_scratch_mount >> "$seqres.full" 2>&1

TESTDIR="$SCRATCH_MNT/test-$seq"
rm -rf "$TESTDIR"
mkdir "$TESTDIR"

# Well let's hope the maximum reflink count is (less than (ha!)) 2^32...

echo "Create a one block file"
BLKSZ="$(stat -f "$TESTDIR" -c '%S')"
_pwrite_byte 0x61 0 $BLKSZ "$TESTDIR/file1" >> "$seqres.full"
_pwrite_byte 0x62 0 $BLKSZ "$TESTDIR/file2" >> "$seqres.full"
_cp_reflink "$TESTDIR/file1" "$TESTDIR/file2" >> "$seqres.full"

nr=32
fnr=32
for i in $(seq 0 $fnr); do
	echo " ++ Reflink size $i, $(( (2 ** i) * BLKSZ)) bytes" | tee -a "$seqres.full"
	n=$(( (2 ** i) * BLKSZ))
	_reflink_range "$TESTDIR/file1" 0 "$TESTDIR/file1" $n $n >> "$seqres.full" || break
done

nrf=$((nr - fnr))
echo "Clone $((2 ** nrf)) files"
seq 0 $((2 ** nrf)) | while read i; do
	_cp-reflink "$TESTDIR/file1" "$TESTDIR/file1-$i"
done

echo "Check scratch fs"
umount "$SCRATCH_MNT"
_check_scratch_fs

echo "Remove big file and recheck"
_scratch_mount >> "$seqres.full" 2>&1
umount "$SCRATCH_MNT"
_check_scratch_fs

echo "Remove all files and recheck"
_scratch_mount >> "$seqres.full" 2>&1
umount "$SCRATCH_MNT"
_check_scratch_fs

# success, all done
status=0
exit
