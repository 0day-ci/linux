#! /bin/bash
# FS QA Test No. 176
#
# Try to run out of space while cloning?
#
#-----------------------------------------------------------------------
# Copyright (c) 2015, Oracle and/or its affiliates.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------

seq=`basename "$0"`
seqres="$RESULT_DIR/$seq"
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1    # failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
    cd /
    rm -rf "$tmp".* "$testdir1"
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/attr
. ./common/reflink

# real QA test starts here
_supported_os Linux
_require_scratch_reflink

rm -f "$seqres.full"

echo "Format and mount"
_scratch_mkfs > "$seqres.full" 2>&1
_scratch_mount >> "$seqres.full" 2>&1

testdir="$SCRATCH_MNT/test-$seq"
rm -rf "$testdir"
mkdir "$testdir"

blksz="$(stat -f "$testdir" -c '%S')"
nr_free="$(stat -f -c '%f' "$testdir")"
echo "Create a big file"
touch "$testdir/file0" "$testdir/file1"
_pwrite_byte 0x61 0 $((blksz * nr_free)) "$testdir/bigfile" >> "$seqres.full" 2>&1
_scratch_remount
sz="$(stat -c '%s' "$testdir/bigfile")"

blks="$((sz / blksz))"
echo "Try to reflink"
seq 0 $blks | while read lblk; do
	fname="$testdir/file$((lblk % 2))"
	out="$(_reflink_range "$testdir/bigfile" $((lblk * blksz)) "$fname" $((lblk * blksz)) $blksz 2>&1)"
	echo "$fname: $out" >> "$seqres.full"
	echo "$out" | grep -q "No space left on device" && break
done

echo "Check scratch fs"
umount "$SCRATCH_MNT"
_check_scratch_fs

# success, all done
status=0
exit
