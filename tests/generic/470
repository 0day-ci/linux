#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2017 Intel Corporation.  All Rights Reserved.
#
# FS QA Test No. 470
#
# Use dm-log-writes to verify that MAP_SYNC actually syncs metadata during
# page faults.
#
seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

tmp=/tmp/$$
here=`pwd`
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	_log_writes_cleanup
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/dmlogwrites

# remove previous $seqres.full before test
rm -f $seqres.full

# real QA test starts here
_supported_fs generic
_supported_os Linux
_require_scratch
_require_log_writes_dax
_require_xfs_io_command "mmap" "-S"
_require_xfs_io_command "log_writes"

_log_writes_init
_log_writes_mkfs >> $seqres.full 2>&1
_log_writes_mount -o dax

LEN=$((1024 * 1024)) # 1 MiB

$XFS_IO_PROG -t -c "truncate $LEN" -c "mmap -S 0 $LEN" -c "mwrite 0 $LEN" \
	-c "log_writes -d $LOGWRITES_NAME -m preunmap" \
	-f $SCRATCH_MNT/test

# Unmount the scratch dir and tear down the log writes target
_log_writes_unmount
_log_writes_remove
_check_scratch_fs

# destroy previous filesystem so we can be sure our rebuild works
_scratch_mkfs >> $seqres.full 2>&1

# check pre-unmap state
_log_writes_replay_log preunmap
_scratch_mount

# We should see $SCRATCH_MNT/test as having 1 MiB in block allocations
du -sh $SCRATCH_MNT/test | _filter_scratch | _filter_spaces

status=0
exit
