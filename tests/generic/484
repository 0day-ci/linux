#! /bin/bash
# FS QA Test 484
#
# POSIX requires that record locks are preserved across an execve(2). But
# there's bug that record locks are released if process is multithreaded at the
# time that execve is called.
#
# Fixed by patch from Jeff Layton:
# locks: change POSIX lock ownership on execve when files_struct is displaced
#
#-----------------------------------------------------------------------
# Copyright (c) 2018 Red Hat Inc.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# remove previous $seqres.full before test
rm -f $seqres.full

# real QA test starts here
_supported_fs generic
_supported_os Linux
_require_test

# prepare a 4k testfile in TEST_DIR
$XFS_IO_PROG -f -c "pwrite -S 0xFF 0 4096" \
	$TEST_DIR/t_lock_execve_file >> $seqres.full 2>&1

$here/src/t_locks_execve $TEST_DIR/t_lock_execve_file

# success, all done
echo "Silence is golden"
status=0
exit
