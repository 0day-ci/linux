#! /bin/bash
# FS QA Test No. 259
#
# Test fs creation on 4 TB minus few bytes partition
#
#-----------------------------------------------------------------------
# Copyright (c) 2011 Red Hat.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

status=1	# failure is the default!

_cleanup()
{
    rm -f "$testfile"
}

trap "_cleanup ; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# real QA test starts here
_supported_fs xfs
_supported_os Linux
_require_test
_require_loop
_require_math

testfile=$TEST_DIR/259.image

# Test various sizes slightly less than 4 TB. Need to handle different
# minimum block sizes for CRC enabled filesystems, but use a small log so we
# don't write lots of zeros unnecessarily.
xfs_info $TEST_DIR | _filter_mkfs 2> $tmp.mkfs > /dev/null
. $tmp.mkfs
if [ $_fs_has_crcs -eq 1 ]; then
	blocksize=1024
	sizes_to_check="1024 2048 4096"
	echo "Trying to make (4 TB - 512) B long xfs fs image"
else
	blocksize=512
	sizes_to_check="512 1024 2048 4096"
fi

four_TB=$(_math "2^42")
for del in $sizes_to_check; do
	ddseek=$(_math "$four_TB - $del")
	echo "Trying to make (4 TB - $del) B long xfs fs image"
	rm -f "$testfile"
	dd if=/dev/zero "of=$testfile" bs=1 count=0 seek=$ddseek \
					>/dev/null 2>&1 || echo "dd failed"
	lofile=$(losetup -f)
	losetup $lofile "$testfile"
	"$MKFS_XFS_PROG" -l size=32m -b size=$blocksize $lofile \
					>/dev/null || echo "mkfs failed!"
	sync
	losetup -d $lofile
done

status=0

exit
