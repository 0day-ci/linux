#! /bin/sh
# XFS QA Test No. 017
# $Id: 1.1 $
#
# test remount ro - pv 795642 
#
#-----------------------------------------------------------------------
# Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
# 
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write the Free Software Foundation, Inc., 59
# Temple Place - Suite 330, Boston MA 02111-1307, USA.
# 
# Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,
# Mountain View, CA  94043, or:
# 
# http://www.sgi.com 
# 
# For further information regarding this notice, see: 
# 
# http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/
#-----------------------------------------------------------------------
#
# creator
owner=dxm@sgi.com

seq=`basename $0`
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1

_cleanup()
{
    echo "*** unmount"
    umount $SCRATCH_MNT 2>/dev/null
}
trap "_cleanup; rm -f $tmp.*; exit \$status" 0 1 2 3 15

_clean_log()
{
    echo ""                                 >>$seq.full
    echo "*** xfs_logprint ***"             >>$seq.full
    echo ""                                 >>$seq.full
    xfs_logprint -tb $1                     | tee -a $seq.full \
        | head | grep -q "<CLEAN>" || _fail "DIRTY LOG"
}

# get standard environment, filters and checks
. ./common.rc
. ./common.filter


# From: Steve Lord <lord@sgi.com> 
# Date: Thu, 25 Oct 2001 14:21:09 -0500 
# This is a combination of merging up to 2.4.13 and cleaning up some
# mismatched rcs ids which had crept into the tree. It also makes the
# block device cache and the xfs metadata cache coherent - well almost
# coherent. The xfs super block and the log are written from special
# purpose buffers which are not part of the regular cache. 
# 
# Since unmount flushes and removes all cached data, the only time the
# inconsistency shows up is if you look at the block device while the
# fs is mounted. A consequence of this is that regression test number 17
# in the test suite will now fail - since it does precisely this.
# 
# I hope to fix the super block one at least at some point, this will
# make xfs_db on a running fs more useful, but the log may never be
# fully coherent with the block device interface...
# 
# Steve

_notrun "Test (temporarily) retired - refer to comment in test script"

# real QA test starts here

_require_scratch

echo "*** init FS"

rm -f $seq.full
umount $SCRATCH_DEV >/dev/null 2>&1
echo "*** MKFS ***"                         >>$seq.full
echo ""                                     >>$seq.full
mkfs_xfs -f $SCRATCH_DEV                    >>$seq.full 2>&1 \
    || _fail "mkfs failed"
mount -t xfs $SCRATCH_DEV $SCRATCH_MNT      >>$seq.full 2>&1 \
    || _fail "mount failed"

echo "*** test"

for l in 0 1 2 3 4
do
        echo "    *** test $l"
        src/fsstress -d $SCRATCH_MNT -n 1000 $FSSTRESS_AVOID >>$seq.full
        
        mount -o remount,ro $SCRATCH_DEV \
            || _fail "remount ro failed"
            
        _clean_log $SCRATCH_DEV 
        
        echo ""                             >>$seq.full
        echo "*** XFS_CHECK ***"            >>$seq.full
        echo ""                             >>$seq.full
        xfs_check $SCRATCH_DEV              >>$seq.full 2>&1 \
            || _fail "xfs_check failed"
        mount -o remount,rw $SCRATCH_DEV \
            || _fail "remount rw failed"
done

echo "*** done"
# happy exit
rm -f $seq.full
status=0
exit 0
