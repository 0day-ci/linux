/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Deterministic automata helper functions, to be used with the automata
 * models in C generated by the dot2k tool.
 *
 * The dot2k tool is available at https://gitlab.com/linux-rv-tools/dot2/.
 *
 * Copyright (C) 2019-2022 Daniel Bristot de Oliveira <bristot@kernel.org>
 */

#define DECLARE_AUTOMATA_HELPERS(name, type)					\
										\
static inline void *model_get_model_##name(void)				\
{										\
	return (void *) &automaton_##name;					\
}										\
										\
char *model_get_state_name_##name(enum states_##name state)			\
{										\
	return automaton_##name.state_names[state];				\
}										\
										\
char *model_get_event_name_##name(enum events_##name event)			\
{										\
	return automaton_##name.event_names[event];				\
}										\
										\
static inline type model_get_init_state_##name(void)				\
{										\
	return automaton_##name.initial_state;					\
}										\
										\
static inline type 								\
model_get_next_state_##name(enum states_##name curr_state,			\
			    enum events_##name event)				\
{										\
	if ((curr_state < 0) || (curr_state > state_max))			\
		return -1;							\
										\
	if ((event < 0) || (event > event_max))					\
		return -1;							\
										\
	return automaton_##name.function[curr_state][event];			\
}										\
										\
static inline bool model_is_final_state_##name(enum states_##name state)	\
{										\
	if ((state < 0) || (state > state_max))					\
		return 0;							\
										\
	return !!automaton_##name.final_states[state];				\
}
